name: Update README with Version Changes

on:
  push:
    tags:
      - "v*.*.*"  # `vX.Y.Z` のタグが付いたブランチをトリガー

jobs:
  update_readme:
    runs-on: ubuntu-latest

    steps:
      - name: チェックアウトリポジトリ
        uses: actions/checkout@v4

      - name: 最新のコミット情報を取得
        id: get_commit
        run: |
          LATEST_COMMIT=$(git log -1 --pretty=format:"%s%n%n%b")
          echo "$LATEST_COMMIT" > commit_message.txt
          echo "COMMIT_MESSAGE<<EOF" >> $GITHUB_ENV
          cat commit_message.txt >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: ChatGPT API で要約・最適化
        id: optimize_commit
        run: |
          COMMIT_MESSAGE=$(echo "${{ env.COMMIT_MESSAGE }}" | jq -Rs .)

          # JSONデータを適切に作成
          JSON_PAYLOAD=$(jq -n \
            --arg model "gpt-4" \
            --arg system "You are an expert in summarizing Git commit messages for release notes." \
            --arg user "Summarize and optimize the following commit message into a concise changelog:\n\n$COMMIT_MESSAGE" \
            '{model: $model, messages: [{role: "system", content: $system}, {role: "user", content: $user}], max_tokens: 200}')

          RESPONSE=$(echo "$JSON_PAYLOAD" | curl -s -X POST "https://api.openai.com/v1/chat/completions" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data @-)

          # APIレスポンスをデバッグ
          echo "API RESPONSE: $RESPONSE"

          # ChatGPTのレスポンスから `\n` を削除し、1行に変換
          OPTIMIZED_SUMMARY=$(echo "$RESPONSE" | jq -r '.choices[0].message.content // "ERROR: No content received"' | tr '\n' ' ')

          echo "OPTIMIZED_SUMMARY=$OPTIMIZED_SUMMARY" >> $GITHUB_ENV
  
      - name: README.md にバージョン情報を追加
        run: |
          SUMMARY="${{ env.OPTIMIZED_SUMMARY }}"
          if [ -z "$SUMMARY" ] || [ "$SUMMARY" = "null" ] || [ "$SUMMARY" = "ERROR: No content received" ]; then
            SUMMARY="No summary generated"
          fi

          echo -e "\n## ${{ github.ref_name }}\n\n$SUMMARY" >> README.md
          cat README.md

      - name: 既存タグを削除して再作成プッシュ
        env:
          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"

          # 最新のリモートタグを取得し、ローカルと同期
          git fetch --tags --force

          # ローカルのタグを削除 (存在する場合)
          git tag -d ${{ github.ref_name }} || true

          # リモートのタグを削除 (存在する場合)
          git push --delete https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git ${{ github.ref_name }} || true

          # ローカルのタグを再作成
          git tag -a ${{ github.ref_name }} -m "Updated version tag"

          # リモートのタグを強制的に更新
          git push --force https://x-access-token:${PAT_TOKEN}@github.com/${{ github.repository }}.git ${{ github.ref_name }}
